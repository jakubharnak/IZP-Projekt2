Program vytváří aplikaci pro práci s datovými strukturami, konkrétně pro manipulaci s bludištěm. Zde je detailnější popis jednotlivých částí programu:

1. **Definice datové struktury `Map`:**
   - Struktura obsahuje informace o bludišti, tj. počet řádků a sloupců a pole buněk reprezentovaných pomocí bajtů.
   - Každý byte obsahuje informace o hranicích dané buňky.

2. **Funkce `getBit`:**
   - Slouží k získání hodnoty jednotlivých bitů z bajtu. Je používána k čtení informací o hranicích buňky.

3. **Funkce `isborder`:**
   - Kontroluje přítomnost hranice na zadaném místě v bludišti.
   - Parametr `border` určuje, kterou hranici kontrolujeme (levou, pravou, horní, dolní).

4. **Funkce `next_border`:**
   - Rekurzivně prochází bludiště a hledá cestu na základě pravidel pro přítomnost hranic.
   - Používá se při hledání cesty v bludišti.

5. **Funkce `start_border`:**
   - Určuje, kde začít hledání cesty na základě přítomnosti hranic výchozí buňky.
   - Při inicializaci se rozhoduje, zda začít hledání směrem vlevo (`leftright = 1`) nebo vpravo (`leftright = 0`).

6. **Funkce `getMapValue`:**
   - Získá hodnotu buňky na zadaných souřadnicích (řádek `r`, sloupec `c`) v bludišti.

7. **Funkce `loadMap`:**
   - Načítá informace o bludišti ze souboru a připravuje paměť pro ukládání dat.
   - Ukládá informace o jednotlivých buňkách do pole `cells` v rámci struktury `Map`.

8. **Funkce `freeMap`:**
   - Uvolňuje paměť alokovanou pro pole buněk v bludišti.

9. **Funkce `findPathR` a `findPathL`:**
   - Inicializují hledání cesty v bludišti vpravo (`findPathR`) nebo vlevo (`findPathL`) z daného výchozího bodu.

10. **Hlavní funkce `main`:**
    - Zpracovává argumenty příkazové řádky.
    - Pokud je použit příkaz `--help`, vypíše nápovědu.
    - Při použití příkazu `--test` načte bludiště ze souboru a vypíše, zda je platné.
    - Příkazy `--rpath` a `--lpath` spustí hledání cesty v bludišti z určeného bodu.
